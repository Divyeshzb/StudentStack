# ********RoostGPT********
# Test generated by RoostGPT for test connector-api-spec using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /products_get for http method type GET in artillery framework
# RoostTestHash=70199667a6
# 
# 
# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "products_get_others.csv"
    fields:
      - "productId"
      - "productName"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 20

scenarios:
  - name: "Testing Non-Success API Responses"
    flow:
      - log: "Sending a GET request to an invalid URL"
      - get:
          url: "/invalidURL"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
      - think: 1
      - log: "Sending a GET request with an invalid product ID"
      - get:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "message"
            - equals:
                message: "Product not found"
      - think: 1
      - log: "Sending a GET request without authorization"
      - get:
          url: "/products/{{ productId }}"
          expect:
            - statusCode: 401
            - hasProperty: "error"
            - equals:
                error: "Unauthorized"
      - think: 1
      - log: "Sending a POST request with an invalid payload"
      - post:
          url: "/products"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            productName: "{{ productName }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - equals:
                error: "Invalid request payload input"
      - think: 1
      - log: "Sending a DELETE request without authorization"
      - delete:
          url: "/products/{{ productId }}"
          expect:
            - statusCode: 401
            - hasProperty: "error"
            - equals:
                error: "Unauthorized"
