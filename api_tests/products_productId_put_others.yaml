# ********RoostGPT********
# Test generated by RoostGPT for test connector-api-spec using AI Type Open AI and AI Model gpt-4
# 
# Test generated for /products/{productId}_put for http method type PUT in artillery framework
# RoostTestHash=7b2a6b6959
# 
# 
# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "products_productId_put_others.csv"
    fields:
      - "id"
      - "name"
      - "description"
      - "price"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 5

scenarios:
  - name: "Test non-successful API responses"
    flow:
      # Test with invalid auth token
      - post:
          url: "/products/{{ id }}"
          headers:
            Authorization: "InvalidToken"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 401
      - think: 1

      # Test with missing required fields in payload
      - put:
          url: "/products/{{ id }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: ""
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 400
      - think: 1

      # Test with incorrect URL
      - put:
          url: "/invalidURL/{{ id }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
      - think: 1

      # Test with invalid data type in payload
      - put:
          url: "/products/{{ id }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: 12345
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 400
      - think: 1

      # Test with invalid product id in URL
      - put:
          url: "/products/invalidID"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          expect:
            - statusCode: 404
      - think: 1
